{"ast":null,"code":"import _ElementUI2 from \"element-ui/lib/theme-chalk/index.css\";\nimport _ElementUI from \"element-ui/lib\";\nimport Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\n\n// 全局引入\n\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(_ElementUI);\n\n// 按需引入 使用解构的方式,首字母大写\n// import { Container, Aside, Header, Main} from 'element-ui';\n// Vue.use(Container)\n// Vue.use(Aside)\n// Vue.use(Header)\n// Vue.use(Main)\n\nimport router from './router'; // 会默认读取router/index.js中的内容  创建\n// store\nimport store from './store';\nimport './api/mock';\nimport Cookie from 'js-cookie';\n\n// 添加全局前置导航守卫  重要！！！\nrouter.beforeEach((to, from, next) => {\n  // 判断token是否存在 从cookie中读取\n  const token = Cookie.get('token');\n\n  // 如果token不存在，说明当前用户是未登录，应该要跳转到登录页面\n  if (to.name !== 'Login' && !token) {\n    next({\n      name: 'Login'\n    }); // 跳转到登录页面\n  }\n  // 如果token存在并且是登录页面说明已登录，则要跳转到首页（其他页面）\n  else if (token && to.name === 'Login') {\n    next({\n      name: 'home'\n    });\n  } else {\n    next();\n  }\n});\nnew Vue({\n  router,\n  // 挂载\n  store,\n  render: h => h(App),\n  created() {\n    store.commit('addMenu', router);\n  }\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","config","productionTip","use","_ElementUI","router","store","Cookie","beforeEach","to","from","next","token","get","name","render","h","created","commit","$mount"],"sources":["C:/Users/Administrator/Desktop/资料文档/前端开发/10-Vue/vue2_manage-master/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nVue.config.productionTip = false\n\n\n// 全局引入\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nVue.use(ElementUI); \n\n// 按需引入 使用解构的方式,首字母大写\n// import { Container, Aside, Header, Main} from 'element-ui';\n// Vue.use(Container)\n// Vue.use(Aside)\n// Vue.use(Header)\n// Vue.use(Main)\n\nimport router from './router';  // 会默认读取router/index.js中的内容  创建\n// store\nimport store from './store'\nimport  './api/mock'\nimport Cookie from 'js-cookie'\n\n// 添加全局前置导航守卫  重要！！！\nrouter.beforeEach((to, from, next) => {\n\t// 判断token是否存在 从cookie中读取\n\tconst token = Cookie.get('token')\n\n\t// 如果token不存在，说明当前用户是未登录，应该要跳转到登录页面\n\tif (to.name !== 'Login' && !token) {\n\t\tnext({ name: 'Login' }) // 跳转到登录页面\n\t} \n\t// 如果token存在并且是登录页面说明已登录，则要跳转到首页（其他页面）\n\telse if(token && to.name === 'Login') {\n\t\tnext({name: 'home'})\n\t} else {\n\t\tnext()\n\t}\n\t\n  })\n\n\n\nnew Vue({\n  router, // 挂载\n  store,\n  \n  render: h => h(App),\n  created() {\n\tstore.commit('addMenu', router)\n  }\n}).$mount('#app')\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3BD,GAAG,CAACE,MAAM,CAACC,aAAa,GAAG,KAAK;;AAGhC;;AAEA,OAAO,sCAAsC;AAC7CH,GAAG,CAACI,GAAG,CAAAC,UAAU,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAE;AAChC;AACA,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAQ,YAAY;AACpB,OAAOC,MAAM,MAAM,WAAW;;AAE9B;AACAF,MAAM,CAACG,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACrC;EACA,MAAMC,KAAK,GAAGL,MAAM,CAACM,GAAG,CAAC,OAAO,CAAC;;EAEjC;EACA,IAAIJ,EAAE,CAACK,IAAI,KAAK,OAAO,IAAI,CAACF,KAAK,EAAE;IAClCD,IAAI,CAAC;MAAEG,IAAI,EAAE;IAAQ,CAAC,CAAC,EAAC;EACzB;EACA;EAAA,KACK,IAAGF,KAAK,IAAIH,EAAE,CAACK,IAAI,KAAK,OAAO,EAAE;IACrCH,IAAI,CAAC;MAACG,IAAI,EAAE;IAAM,CAAC,CAAC;EACrB,CAAC,MAAM;IACNH,IAAI,CAAC,CAAC;EACP;AAEC,CAAC,CAAC;AAIJ,IAAIZ,GAAG,CAAC;EACNM,MAAM;EAAE;EACRC,KAAK;EAELS,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAChB,GAAG,CAAC;EACnBiB,OAAOA,CAAA,EAAG;IACXX,KAAK,CAACY,MAAM,CAAC,SAAS,EAAEb,MAAM,CAAC;EAC9B;AACF,CAAC,CAAC,CAACc,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
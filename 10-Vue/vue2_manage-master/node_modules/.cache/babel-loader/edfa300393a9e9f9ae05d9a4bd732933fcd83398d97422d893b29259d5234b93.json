{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookie from 'js-cookie';\nexport default {\n  data() {\n    return {\n      //   isCollapse: false, data里面的数据不能重复电仪\n      //   menuData转成动态数据\n      //   menuData: [\n      //     {\n      //       path: '/',\n      //       name: 'home',\n      //       label: '首页',\n      //       icon: 's-home',\n      //       url: 'Home/Home'\n      //     },\n      //     {\n      //       path: '/mall',\n      //       name: 'mall',\n      //       label: '商品管理',\n      //       icon: 'video-play',  // 在element-ul中的Icon图标可以搜索到\n      //       url: 'MallManage/MallManage'\n      //     },\n      //     {\n      //       path: '/user',\n      //       name: 'user',\n      //       label: '用户管理',\n      //       icon: 'user',\n      //       url: 'UserManage/UserManage'\n      //     },\n      //     {\n      //       label: '其他',\n      //       icon: 'location',\n      //       // 根据children来判断是否有子菜单\n      //       children: [\n      //         {\n      //           path: '/page1',\n      //           name: 'page1',\n      //           label: '页面1',\n      //           icon: 'setting',\n      //           url: 'Other/PageOne'\n      //         },\n      //         {\n      //           path: '/page2',\n      //           name: 'page2',\n      //           label: '页面2',\n      //           icon: 'setting',\n      //           url: 'Other/PageTwo'\n      //         }\n      //       ]\n      //     },\n\n      //     {\n      //       label: '其他2',\n      //       icon: 'location',\n      //       // 根据children来判断是否有子菜单\n      //       children: [\n      //         {\n      //           path: '/page21',\n      //           name: 'page21',\n      //           label: '页面21',\n      //           icon: 'setting',\n      //           url: 'Other/PageOne2'\n      //         },\n      //         {\n      //           path: '/page22',\n      //           name: 'page22',\n      //           label: '页面22',\n      //           icon: 'setting',\n      //           url: 'Other/PageTwo2'\n      //         }\n      //       ]\n      //     },\n\n      //   ]\n    };\n  },\n  methods: {\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    // 点击菜单\n    clickMenu(item) {\n      console.log(item);\n      console.log(this.$route.path); // 表示当前路由，比如从A跳到B页面，那么当前路由是A\n      console.log(item.path);\n      console.log('item', item); // 点击菜单获取当前路由的信息\n\n      //   this.$route当前路由，this.$router全局路由可以调用push()\n      //   实现跳转,如果是同一个页面进行跳转的话会报错，所以要设置当页面不一致时才允许跳转\n      if (this.$route.path !== item.path && (this.$route.path !== '/home' || item.path !== '/')) {\n        this.$router.push(item.path);\n      }\n\n      //   点击的时候调用mutation, 1.通过store的commit方法  2.通过辅助函数 \n      this.$store.commit('selectMenu', item);\n    }\n  },\n  //   对数据进行处理分为有子菜单和没有子菜单的数据\n  computed: {\n    // 没有子菜单S\n    noChildren() {\n      return this.menuData.filter(item => !item.children); // 不存在该属性\n    },\n\n    // 有子菜单\n    hasChildren() {\n      return this.menuData.filter(item => item.children);\n    },\n    isCollapse() {\n      // 对应模块tab下面的isCollapse\n      //   console.log(this.$store.state.tab.isCollapse, 'isCollapse');\n      return this.$store.state.tab.isCollapse;\n    },\n    // 把静态数据转成动态\n    menuData() {\n      // 获取store的state\n      // 判断当前数据，如果缓存中没有，当前store中获取\n\n      return JSON.parse(Cookie.get('menu')) || this.$store.state.tab.menu;\n    }\n  }\n};","map":{"version":3,"names":["Cookie","data","methods","handleOpen","key","keyPath","console","log","handleClose","clickMenu","item","$route","path","$router","push","$store","commit","computed","noChildren","menuData","filter","children","hasChildren","isCollapse","state","tab","JSON","parse","get","menu"],"sources":["src/components/CommonAside1.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <el-radio-group v-model=\"isCollapse\"\n                    style=\"margin-bottom: 20px;\">\n      <el-radio-button :label=\"false\">展开</el-radio-button>\n      <el-radio-button :label=\"true\">收起</el-radio-button>\n    </el-radio-group> -->\n\n    <el-menu default-active=\"1-4-1\"\n             class=\"el-menu-vertical-demo\"\n             @open=\"handleOpen\"\n             @close=\"handleClose\"\n             :collapse=\"isCollapse\"\n             background-color=\"#545c64\"\n             text-color=\"#fff\"\n             active-text-color=\"#ffd04b\">\n      <p>{{ isCollapse? '后台':'通用后台管理系统'}}</p>\n      <!-- v-for遍历     key固定且为一的值   :是v-bind:的简写表示动态变化  @是v-on:的简写    @click点击方法-->\n      <el-menu-item v-for=\"item in noChildren\"\n                    @click=\"clickMenu(item)\"\n                    :key=\"item.name\"\n                    :index=\"item.name\">\n        <!-- 设置获取动态图标 动态绑定 v-bind:   -->\n        <i :class=\"`el-icon-${item.icon}`\"></i>\n        <span slot=\"title\">{{item.label}}</span> <!--  外面的花括号是说：我这里面写的是js语句,内部的花括号是说：我里面的不是要显示的文字，而是变量，我要把变量的值解析放在这 -->\n      </el-menu-item>\n\n      <!-- 二级菜单显示部分 -->\n      <el-submenu v-for=\"item in hasChildren\"\n                  :key=\"item.label\"\n                  :index=\"item.label\">\n        <template slot=\"title\">\n          <i :class=\"`el-icon-${item.icon}`\"></i>\n          <span slot=\"title\">{{ item.label }}</span>\n        </template>\n\n        <el-menu-item-group v-for=\" subItem in item.children\"\n                            :key=\"subItem.name\"> <!-- 遍历children属性，注意此时遍历用的subItem不再使用item -->\n          <el-menu-item :index=\"subItem.name\"\n                        @click=\"clickMenu(subItem)\">{{ subItem.label }}</el-menu-item>\n        </el-menu-item-group>\n\n      </el-submenu>\n\n    </el-menu>\n  </div>\n</template>\n<!-- scoped表示只作用于当前页面  -->\n <style lang=\"less\" scoped>\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n  width: 200px;\n  min-height: 400px;\n}\n\n.el-menu {\n  height: 100vh; // vh可视窗口的百分比单位\n  border-right: 0;\n  p {\n    // less的嵌套语法\n    text-align: center;\n    font-size: 16px;\n    font-weight: 400;\n    color: white;\n    line-height: 48px;\n  }\n}\n</style>\n\n<script>\nimport Cookie from 'js-cookie'\n\nexport default {\n\n  data () {\n    return {\n      //   isCollapse: false, data里面的数据不能重复电仪\n      //   menuData转成动态数据\n      //   menuData: [\n      //     {\n      //       path: '/',\n      //       name: 'home',\n      //       label: '首页',\n      //       icon: 's-home',\n      //       url: 'Home/Home'\n      //     },\n      //     {\n      //       path: '/mall',\n      //       name: 'mall',\n      //       label: '商品管理',\n      //       icon: 'video-play',  // 在element-ul中的Icon图标可以搜索到\n      //       url: 'MallManage/MallManage'\n      //     },\n      //     {\n      //       path: '/user',\n      //       name: 'user',\n      //       label: '用户管理',\n      //       icon: 'user',\n      //       url: 'UserManage/UserManage'\n      //     },\n      //     {\n      //       label: '其他',\n      //       icon: 'location',\n      //       // 根据children来判断是否有子菜单\n      //       children: [\n      //         {\n      //           path: '/page1',\n      //           name: 'page1',\n      //           label: '页面1',\n      //           icon: 'setting',\n      //           url: 'Other/PageOne'\n      //         },\n      //         {\n      //           path: '/page2',\n      //           name: 'page2',\n      //           label: '页面2',\n      //           icon: 'setting',\n      //           url: 'Other/PageTwo'\n      //         }\n      //       ]\n      //     },\n\n      //     {\n      //       label: '其他2',\n      //       icon: 'location',\n      //       // 根据children来判断是否有子菜单\n      //       children: [\n      //         {\n      //           path: '/page21',\n      //           name: 'page21',\n      //           label: '页面21',\n      //           icon: 'setting',\n      //           url: 'Other/PageOne2'\n      //         },\n      //         {\n      //           path: '/page22',\n      //           name: 'page22',\n      //           label: '页面22',\n      //           icon: 'setting',\n      //           url: 'Other/PageTwo2'\n      //         }\n      //       ]\n      //     },\n\n      //   ]\n    }\n  },\n  methods: {\n    handleOpen (key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose (key, keyPath) {\n      console.log(key, keyPath);\n    },\n    // 点击菜单\n    clickMenu (item) {\n      console.log(item);\n      console.log(this.$route.path); // 表示当前路由，比如从A跳到B页面，那么当前路由是A\n      console.log(item.path);\n      console.log('item', item); // 点击菜单获取当前路由的信息\n\n      //   this.$route当前路由，this.$router全局路由可以调用push()\n      //   实现跳转,如果是同一个页面进行跳转的话会报错，所以要设置当页面不一致时才允许跳转\n      if (this.$route.path !== item.path && (this.$route.path !== '/home' || (item.path !== '/'))) {\n        this.$router.push(item.path)\n      }\n\n      //   点击的时候调用mutation, 1.通过store的commit方法  2.通过辅助函数 \n      this.$store.commit('selectMenu', item)\n    }\n  },\n\n  //   对数据进行处理分为有子菜单和没有子菜单的数据\n  computed: {\n    // 没有子菜单S\n    noChildren () {\n      return this.menuData.filter(item => !item.children)  // 不存在该属性\n    },\n\n    // 有子菜单\n    hasChildren () {\n      return this.menuData.filter(item => item.children)\n    },\n\n    isCollapse () {\n      // 对应模块tab下面的isCollapse\n      //   console.log(this.$store.state.tab.isCollapse, 'isCollapse');\n      return this.$store.state.tab.isCollapse\n    },\n    // 把静态数据转成动态\n    menuData () { // 获取store的state\n      // 判断当前数据，如果缓存中没有，当前store中获取\n\n      return JSON.parse(Cookie.get('menu')) || this.$store.state.tab.menu\n    }\n\n  },\n\n\n};\n\n\n</script>"],"mappings":";AAqEA,OAAAA,MAAA;AAEA;EAEAC,KAAA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;IAAA,CACA;EACA;EACAC,OAAA;IACAC,WAAAC,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAG,YAAAJ,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACA;IACAI,UAAAC,IAAA;MACAJ,OAAA,CAAAC,GAAA,CAAAG,IAAA;MACAJ,OAAA,CAAAC,GAAA,MAAAI,MAAA,CAAAC,IAAA;MACAN,OAAA,CAAAC,GAAA,CAAAG,IAAA,CAAAE,IAAA;MACAN,OAAA,CAAAC,GAAA,SAAAG,IAAA;;MAEA;MACA;MACA,SAAAC,MAAA,CAAAC,IAAA,KAAAF,IAAA,CAAAE,IAAA,UAAAD,MAAA,CAAAC,IAAA,gBAAAF,IAAA,CAAAE,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA,CAAAJ,IAAA,CAAAE,IAAA;MACA;;MAEA;MACA,KAAAG,MAAA,CAAAC,MAAA,eAAAN,IAAA;IACA;EACA;EAEA;EACAO,QAAA;IACA;IACAC,WAAA;MACA,YAAAC,QAAA,CAAAC,MAAA,CAAAV,IAAA,KAAAA,IAAA,CAAAW,QAAA;IACA;;IAEA;IACAC,YAAA;MACA,YAAAH,QAAA,CAAAC,MAAA,CAAAV,IAAA,IAAAA,IAAA,CAAAW,QAAA;IACA;IAEAE,WAAA;MACA;MACA;MACA,YAAAR,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAF,UAAA;IACA;IACA;IACAJ,SAAA;MAAA;MACA;;MAEA,OAAAO,IAAA,CAAAC,KAAA,CAAA3B,MAAA,CAAA4B,GAAA,kBAAAb,MAAA,CAAAS,KAAA,CAAAC,GAAA,CAAAI,IAAA;IACA;EAEA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
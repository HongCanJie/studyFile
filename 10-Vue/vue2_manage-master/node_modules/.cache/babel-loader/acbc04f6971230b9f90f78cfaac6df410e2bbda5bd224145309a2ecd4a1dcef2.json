{"ast":null,"code":"import Mock from 'mockjs';\n// 引入api\nimport homeApi from './mockServeData/home';\nimport userApi from './mockServeData/user';\nimport permission from './mockServeData/permission';\n\n// 定义mock请求拦截 这里的getData是index.js中需要获得的   ‘get'类型可省略\nMock.mock('/api/home/getData', 'get', homeApi.getStatisticalData);\n\n// Mock.mock('/api/home/getData', 'get', function () {\n// \t// 拦截到请求后的处理逻辑\n// \tconsole.log('拦截到了');\n// \t// 这里的return返回的是data\n// \treturn []\n\n// })\n// 把相同的逻辑封装在一起,设计一个方法可以放在mock()里面代替那个function（）{}\n// {\n// \tgetData:function() {\n\n// \t}\n// }\n\n// 报404错误说明是Mock拦截出错 定义拦截路径两种方法：1.直接写死一个路径，直接按照当前路径匹配，加了url则匹配不到 2.使用正则\n// 用户列表的数据  add是自己起的名字\nMock.mock('/api/user/add', 'post', userApi.createUser);\nMock.mock('/api/user/del', 'post', userApi.deleteUser);\nMock.mock('/api/user/edit', 'post', userApi.updateUser);\n// 注意路径匹配，此处换成正则   {url: '/api/user/getUser?page=6&limit=10'}\nMock.mock(/api\\/user\\/getUser/, userApi.getUserList); // get可以省略不写\n\n// 定义\nMock.mock(/api\\/permission\\/getMenu/, 'post', permission.getMenu);\n\n// 去api/indexedDB.js定义前端相关的","map":{"version":3,"names":["Mock","homeApi","userApi","permission","mock","getStatisticalData","createUser","deleteUser","updateUser","getUserList","getMenu"],"sources":["C:/Users/Administrator/Desktop/vue2_manage-master/src/api/mock.js"],"sourcesContent":["\nimport Mock from 'mockjs'\n// 引入api\nimport homeApi from './mockServeData/home'\nimport userApi from './mockServeData/user'\nimport permission from './mockServeData/permission'\n\n\n// 定义mock请求拦截 这里的getData是index.js中需要获得的   ‘get'类型可省略\nMock.mock('/api/home/getData', 'get',homeApi.getStatisticalData )\n\n\n// Mock.mock('/api/home/getData', 'get', function () {\n// \t// 拦截到请求后的处理逻辑\n// \tconsole.log('拦截到了');\n// \t// 这里的return返回的是data\n// \treturn []\n\t\n// })\n// 把相同的逻辑封装在一起,设计一个方法可以放在mock()里面代替那个function（）{}\n// {\n// \tgetData:function() {\n\n// \t}\n// }\n\n\n// 报404错误说明是Mock拦截出错 定义拦截路径两种方法：1.直接写死一个路径，直接按照当前路径匹配，加了url则匹配不到 2.使用正则\n// 用户列表的数据  add是自己起的名字\nMock.mock('/api/user/add','post', userApi.createUser)\nMock.mock('/api/user/del', 'post',userApi.deleteUser)\nMock.mock('/api/user/edit', 'post',userApi.updateUser)\n// 注意路径匹配，此处换成正则   {url: '/api/user/getUser?page=6&limit=10'}\nMock.mock(/api\\/user\\/getUser/, userApi.getUserList)  // get可以省略不写\n\n// 定义\nMock.mock(/api\\/permission\\/getMenu/,'post', permission.getMenu)\n\n\n// 去api/indexedDB.js定义前端相关的"],"mappings":"AACA,OAAOA,IAAI,MAAM,QAAQ;AACzB;AACA,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,4BAA4B;;AAGnD;AACAH,IAAI,CAACI,IAAI,CAAC,mBAAmB,EAAE,KAAK,EAACH,OAAO,CAACI,kBAAmB,CAAC;;AAGjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACAL,IAAI,CAACI,IAAI,CAAC,eAAe,EAAC,MAAM,EAAEF,OAAO,CAACI,UAAU,CAAC;AACrDN,IAAI,CAACI,IAAI,CAAC,eAAe,EAAE,MAAM,EAACF,OAAO,CAACK,UAAU,CAAC;AACrDP,IAAI,CAACI,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAACF,OAAO,CAACM,UAAU,CAAC;AACtD;AACAR,IAAI,CAACI,IAAI,CAAC,oBAAoB,EAAEF,OAAO,CAACO,WAAW,CAAC,EAAE;;AAEtD;AACAT,IAAI,CAACI,IAAI,CAAC,0BAA0B,EAAC,MAAM,EAAED,UAAU,CAACO,OAAO,CAAC;;AAGhE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 引入api接口\nimport { getData } from '../api';\n// 引入echart\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      tableData: [{\n        name: 'oppo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: 'vivo',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '苹果',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '小米',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '三星',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }, {\n        name: '魅族',\n        todayBuy: 100,\n        monthBuy: 300,\n        totalBuy: 800\n      }],\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }],\n      tableLabel: {\n        name: '品牌名称',\n        todayBuy: '日销量',\n        monthBuy: \"月销量\",\n        totalBuy: \"总销量\"\n      }\n    };\n  },\n  mounted() {\n    getData().then(_ref => {\n      let {\n        data\n      } = _ref;\n      console.log(data);\n      // 获得data里面data的tableData数据\n      const {\n        tableData\n      } = data.data;\n      console.log(tableData);\n      this.tableData = tableData;\n\n      // 基于准备好的dom，初始化echarts实例\n      //   this.$refs.lineRef获取当前的dom节点\n      const echarts_line = echarts.init(this.$refs.lineRef);\n      //   指定图标的数据和配置\n      var option_line = {};\n      //   需要的数据在data的data里面，处理数据：获取当前图例的数据\n      // 处理数据xAxis, 需要解构出来\n      const {\n        orderData\n      } = data.data; // 是对象\n      console.log(orderData.date);\n      const xAxis = Object.keys(orderData.data[0]);\n      console.log(xAxis); // ['苹果', 'vivo', 'oppo', '魅族', '三星', '小米']\n      option_line.xAxis = {\n        data: orderData.date // 日期\n      };\n\n      option_line.legend = {\n        // 图例\n        data: xAxis\n      };\n      option_line.series = [];\n      //   遍历拿到数据\n      xAxis.forEach(key => {\n        option_line.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: 'line'\n        });\n        console.log(option_line);\n      });\n      option_line.yAxis = {};\n      option_line.tooltip = {\n        // 提示框\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      };\n      // 显示图像\n      echarts_line.setOption(option_line);\n\n      // 柱状图\n      const echarts_bar = echarts.init(this.$refs.barRef);\n      const {\n        userData\n      } = data.data;\n      console.log(userData);\n      var option_bar = {\n        legend: {\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: userData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [{\n          type: 'bar',\n          name: '新增用户',\n          data: userData.map(item => item.new)\n        }, {\n          name: '活跃用户',\n          data: userData.map(item => item.active),\n          type: 'bar'\n        }]\n      };\n      console.log(userData.map(item => item.new));\n      echarts_bar.setOption(option_bar);\n\n      // 饼图\n      const echarts_pie = echarts.init(this.$refs.pieRef);\n      const {\n        videoData\n      } = data.data;\n      console.log(videoData);\n      var option_pie = {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\"],\n        series: [{\n          data: videoData,\n          type: 'pie'\n        }]\n      };\n      echarts_pie.setOption(option_pie);\n    });\n\n    // 基于准备好的dom，初始化echarts实例\n    // const echarts1 = echarts.init(this.$refs.lineRef);\n    // var option_line = {\n    //   title: {\n    //     text: 'ECharts 折线图'\n    //   },\n    //   tooltip: { // 提示框\n    //     trigger: 'axis',\n    //     axisPointer: {\n    //       type: 'cross',\n    //       label: {\n    //         backgroundColor: '#6a7985'\n    //       }\n    //     }\n    //   },\n    //   //   图例\n    //   //   legend: {\n    //   // \tdata: ['oppo', 'vivo', '苹果', '小米', '三星', '魅族']\n    //   //   },\n    //   toolbox: {\n    //     feature: {\n    //       saveAsImage: {}\n    //     }\n    //   },\n    //   grid: {\n    //     left: '3% ',\n    //     right: '4%',\n    //     bottom: '3%',\n    //     containLabel: true\n    //   },\n    //   //   x轴\n    //   xAxis: {\n    //     type: 'category',\n    //     boundaryGap: false,\n    //     data: ['日销量', '月销量', '总销量']\n    //   },\n    //   //   y轴\n    //   yAxis: [\n    //     {\n    //       type: 'value'\n    //     }\n    //   ],\n    //   series: [\n    //     {\n    //       name: 'oppo',\n    //       type: 'line', // 折线图\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [500, 3500, 22000]\n    //     },\n    //     {\n    //       name: 'vivo',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [300, 2200, 2400]\n    //     },\n    //     {\n    //       name: '苹果',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [800, 4500, 6500]\n    //     },\n    //     {\n    //       name: '小米',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [1200, 6500, 4500]\n    //     },\n    //     {\n    //       name: '三星',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [300, 2000, 4500]\n    //     },\n    //     {\n    //       name: '魅族',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [350, 3000, 2200]\n    //     },\n    //   ]\n    // };\n    // echarts1.setOption(option_line);\n  }\n};","map":{"version":3,"names":["getData","echarts","data","tableData","name","todayBuy","monthBuy","totalBuy","countData","value","icon","color","tableLabel","mounted","then","_ref","console","log","echarts_line","init","$refs","lineRef","option_line","orderData","date","xAxis","Object","keys","legend","series","forEach","key","push","map","item","type","yAxis","tooltip","trigger","axisPointer","label","backgroundColor","setOption","echarts_bar","barRef","userData","option_bar","textStyle","grid","left","axisLine","lineStyle","axisLabel","interval","new","active","echarts_pie","pieRef","videoData","option_pie"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- layout栅格式，24 -->\n    <el-row>\n      <el-col :span=\"8\">\n        <el-card shadow=\"hover\"\n                 style=\"margin-top: 20px; margin-left: 20px;\">\n          <div class=\"user\">\n            <img src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"\n                 alt=\"\"\n                 srcset=\"\">\n            <div class=\"userinfo\">\n              <p class=\"name\">Admin</p>\n              <p class=\"power\">超级管理员</p>\n            </div>\n          </div>\n          <div class=\"user-info\">\n            <p>上次登陆时间: <span>2023-8-26</span></p>\n            <p>上次登陆地点: <span>江苏</span></p>\n          </div>\n        </el-card>\n        <el-card shadow=\"hover\"\n                 style=\"margin-top: 20px; margin-left: 20px\">\n          <!-- 这里不太理解，如何把data读取进去的 -->\n          <el-table :data=\"\n                   tableData\"\n                    style=\"width: 100%; height:800px\">\n            <!-- prop直接对应data里面的 -->\n            <!-- <el-table-column prop=\"name\"\n                               label=\"品牌名称\"\n                               width=\"auto\">\n              </el-table-column>\n              <el-table-column prop=\"todayBuy\"\n                               label=\"日销量\"\n                               width=\"auto\">\n              </el-table-column>\n              <el-table-column prop=\"monthBuy\"\n                               label=\"月销量\"\n                               width=\"auto\">\n              </el-table-column>\n              <el-table-column prop=\"totalBuy\"\n                               label=\"总销量\"\n                               width=\"auto\">\n              </el-table-column> -->\n            <!-- 利用v-for遍历对象，v-for=\"(value, key) in object\" 注意一定要由:key -->\n            <el-table-column v-for=\"(val, key) in tableLabel\"\n                             :key=\"key\"\n                             :prop='key'\n                             :label='val'\n                             width=\"auto\" />\n          </el-table>\n        </el-card>\n      </el-col>\n      <el-col :span=\"16\">\n        <div class=\"num\">\n          <el-card shadow=\"hover\"\n                   v-for=\"item in countData\"\n                   :key=\"item.name\"\n                   :body-style=\"{display:'flex', padding:0}\">\n            <!-- 动态样式的设置 :style=\"{}\" -->\n            <i class='icon'\n               :class=\"`el-icon-${item.icon}`\"\n               :style=\"{background: item.color}\"></i>\n            <div class=\"detail\">\n              <p class=\"price\">{{ '￥'+item.value }}</p>\n              <p class=\"txt\">{{ item.name }}</p>\n            </div>\n          </el-card>\n        </div>\n        <div class=\"zhexian\">\n          <el-card shadow=\"hover\">\n            <!-- echarts必须设置宽高 -->\n            <div id=\"line\"\n                 ref=\"lineRef\"\n                 class=\"main-chart\"\n                 style=\"width: 100%;height:500px;\"></div>\n          </el-card>\n        </div>\n        <div class=\"graph\">\n          <el-card shadow=\"hover\">\n            <div id=\"bar\"\n                 ref=\"barRef\"\n                 class=\"main-chart\"\n                 style=\"width: 100%;height:400px;\"></div>\n          </el-card>\n          <el-card shadow=\"hover\">\n            <div id=\"pie\"\n                 ref=\"pieRef\"\n                 class=\"main-chart\"\n                 style=\"width: 100%;height:400px;\"></div>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n\n</template>\n\n<script>\n// 引入api接口\nimport { getData } from '../api'\n// 引入echart\nimport * as echarts from 'echarts'\nexport default {\n  data () {\n    return {\n      tableData: [\n        {\n          name: 'oppo',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        },\n        {\n          name: 'vivo',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        },\n        {\n          name: '苹果',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        },\n        {\n          name: '小米',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        },\n        {\n          name: '三星',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        },\n        {\n          name: '魅族',\n          todayBuy: 100,\n          monthBuy: 300,\n          totalBuy: 800\n        }],\n      countData: [\n        {\n          name: \"今日支付订单\",\n          value: 1234,\n          icon: \"success\",\n          color: \"#2ec7c9\",\n        },\n        {\n          name: \"今日收藏订单\",\n          value: 210,\n          icon: \"star-on\",\n          color: \"#ffb980\",\n        },\n        {\n          name: \"今日未支付订单\",\n          value: 1234,\n          icon: \"s-goods\",\n          color: \"#5ab1ef\",\n        },\n        {\n          name: \"本月支付订单\",\n          value: 1234,\n          icon: \"success\",\n          color: \"#2ec7c9\",\n        },\n        {\n          name: \"本月收藏订单\",\n          value: 210,\n          icon: \"star-on\",\n          color: \"#ffb980\",\n        },\n        {\n          name: \"本月未支付订单\",\n          value: 1234,\n          icon: \"s-goods\",\n          color: \"#5ab1ef\",\n        },\n      ],\n      tableLabel: {\n        name: '品牌名称',\n        todayBuy: '日销量',\n        monthBuy: \"月销量\",\n        totalBuy: \"总销量\"\n      }\n\n\n\n    }\n  },\n\n  mounted () {\n    getData().then(({ data }) => {\n      console.log(data);\n      // 获得data里面data的tableData数据\n      const { tableData } = data.data\n      console.log(tableData);\n      this.tableData = tableData\n\n      // 基于准备好的dom，初始化echarts实例\n      //   this.$refs.lineRef获取当前的dom节点\n      const echarts_line = echarts.init(this.$refs.lineRef);\n      //   指定图标的数据和配置\n      var option_line = {}\n      //   需要的数据在data的data里面，处理数据：获取当前图例的数据\n      // 处理数据xAxis, 需要解构出来\n      const { orderData } = data.data // 是对象\n      console.log(orderData.date);\n      const xAxis = Object.keys(orderData.data[0])\n      console.log(xAxis);  // ['苹果', 'vivo', 'oppo', '魅族', '三星', '小米']\n      option_line.xAxis = {\n        data: orderData.date // 日期\n      }\n      option_line.legend = { // 图例\n        data: xAxis\n      }\n      option_line.series = []\n      //   遍历拿到数据\n      xAxis.forEach(key => {\n        option_line.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: 'line'\n        })\n        console.log(option_line);\n      })\n\n      option_line.yAxis = {}\n      option_line.tooltip = { // 提示框\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      }\n      // 显示图像\n      echarts_line.setOption(option_line);\n\n      // 柱状图\n      const echarts_bar = echarts.init(this.$refs.barRef);\n      const { userData } = data.data\n      console.log(userData);\n      var option_bar = {\n        legend: {\n          textStyle: {\n            color: \"#333\",\n          },\n        },\n        grid: {\n          left: \"20%\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          type: \"category\", // 类目轴\n          data: userData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\",\n            },\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\",\n          },\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            axisLine: {\n              lineStyle: {\n                color: \"#17b3a3\",\n              },\n            },\n          },\n        ],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n\n        series: [\n\n          {\n            type: 'bar',\n            name: '新增用户',\n            data: userData.map(item => item.new),\n\n\n          },\n          {\n            name: '活跃用户',\n            data: userData.map(item => item.active),\n            type: 'bar',\n          }\n        ],\n      }\n      console.log(userData.map(item => item.new));\n      echarts_bar.setOption(option_bar);\n\n      // 饼图\n      const echarts_pie = echarts.init(this.$refs.pieRef);\n      const { videoData } = data.data\n      console.log(videoData);\n      var option_pie = {\n        tooltip: {\n          trigger: \"item\",\n        },\n        color: [\n          \"#0f78f4\",\n          \"#dd536b\",\n          \"#9462e5\",\n          \"#a6a6a6\",\n          \"#e1bb22\",\n          \"#39c362\",\n          \"#3ed1cf\",\n        ],\n        series: [\n          {\n            data: videoData,\n            type: 'pie'\n          }\n        ]\n      }\n      echarts_pie.setOption(option_pie);\n\n\n    })\n\n    // 基于准备好的dom，初始化echarts实例\n    // const echarts1 = echarts.init(this.$refs.lineRef);\n    // var option_line = {\n    //   title: {\n    //     text: 'ECharts 折线图'\n    //   },\n    //   tooltip: { // 提示框\n    //     trigger: 'axis',\n    //     axisPointer: {\n    //       type: 'cross',\n    //       label: {\n    //         backgroundColor: '#6a7985'\n    //       }\n    //     }\n    //   },\n    //   //   图例\n    //   //   legend: {\n    //   // \tdata: ['oppo', 'vivo', '苹果', '小米', '三星', '魅族']\n    //   //   },\n    //   toolbox: {\n    //     feature: {\n    //       saveAsImage: {}\n    //     }\n    //   },\n    //   grid: {\n    //     left: '3% ',\n    //     right: '4%',\n    //     bottom: '3%',\n    //     containLabel: true\n    //   },\n    //   //   x轴\n    //   xAxis: {\n    //     type: 'category',\n    //     boundaryGap: false,\n    //     data: ['日销量', '月销量', '总销量']\n    //   },\n    //   //   y轴\n    //   yAxis: [\n    //     {\n    //       type: 'value'\n    //     }\n    //   ],\n    //   series: [\n    //     {\n    //       name: 'oppo',\n    //       type: 'line', // 折线图\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [500, 3500, 22000]\n    //     },\n    //     {\n    //       name: 'vivo',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [300, 2200, 2400]\n    //     },\n    //     {\n    //       name: '苹果',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [800, 4500, 6500]\n    //     },\n    //     {\n    //       name: '小米',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [1200, 6500, 4500]\n    //     },\n    //     {\n    //       name: '三星',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [300, 2000, 4500]\n    //     },\n    //     {\n    //       name: '魅族',\n    //       type: 'line',\n    //       stack: 'Total',\n    //       areaStyle: {},\n    //       emphasis: {\n    //         focus: 'series'\n    //       },\n    //       data: [350, 3000, 2200]\n    //     },\n    //   ]\n    // };\n    // echarts1.setOption(option_line);\n  }\n}\n</script>\n\n<style lang=\"less\" scope>\n.user {\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 10px;\n  img {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n  }\n  .userinfo {\n    margin-left: 20px;\n    .name {\n      //   color: #999;\n      font-size: 24px;\n      line-height: 24px;\n      margin-bottom: 10px;\n    }\n    .power {\n      color: #7e7b7b;\n      font-size: 14px;\n    }\n  }\n}\n.user-info {\n  padding-top: 20px;\n\n  p {\n    font-size: 12px;\n    color: #999;\n    line-height: 20px;\n    padding-bottom: 5px;\n    margin-left: 5px;\n  }\n  span {\n    margin-left: 40px;\n  }\n}\n.num {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 20px;\n  //   注意是在el-card里面设置三分之一32%,而不是在num里面\n  .el-card {\n    width: 32%;\n    margin-bottom: 20px;\n    margin-left: 20px;\n  }\n\n  .icon {\n    height: 80px;\n    width: 80px;\n    color: #fff;\n    text-align: center;\n    line-height: 80px;\n    font-size: 30px;\n  }\n  .detail {\n    display: flex;\n    flex-direction: column; // 决定主轴的方向（即项目的排列方向\n    // align-items: center;\n    text-align: center;\n    justify-content: center; // 在主轴上的对齐方式\n    margin-left: 15px;\n    .price {\n      font-size: 30px;\n      margin-bottom: 10px;\n      line-height: 30px;\n      height: 30px;\n    }\n    .txt {\n      font-size: 14px;\n      color: #999;\n      //   text-align: center;\n    }\n  }\n}\n.zhexian {\n  margin-left: 20px;\n  .el-card {\n    height: 500px;\n  }\n}\n.graph {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-left: 20px;\n  margin-top: 20px;\n  .el-card {\n    width: 49%;\n    height: 400px;\n  }\n}\n</style  >\n\n\n<!-- 快捷键：< 再按TAB键 -->"],"mappings":";AAmGA;AACA,SAAAA,OAAA;AACA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA,GACA;QACAH,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA,GACA;QACAH,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA,GACA;QACAH,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA,GACA;QACAH,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA,GACA;QACAH,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,SAAA,GACA;QACAJ,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,EACA;MACAC,UAAA;QACAR,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;IAIA;EACA;EAEAM,QAAA;IACAb,OAAA,GAAAc,IAAA,CAAAC,IAAA;MAAA;QAAAb;MAAA,IAAAa,IAAA;MACAC,OAAA,CAAAC,GAAA,CAAAf,IAAA;MACA;MACA;QAAAC;MAAA,IAAAD,IAAA,CAAAA,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAd,SAAA;MACA,KAAAA,SAAA,GAAAA,SAAA;;MAEA;MACA;MACA,MAAAe,YAAA,GAAAjB,OAAA,CAAAkB,IAAA,MAAAC,KAAA,CAAAC,OAAA;MACA;MACA,IAAAC,WAAA;MACA;MACA;MACA;QAAAC;MAAA,IAAArB,IAAA,CAAAA,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAM,SAAA,CAAAC,IAAA;MACA,MAAAC,KAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,SAAA,CAAArB,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAQ,KAAA;MACAH,WAAA,CAAAG,KAAA;QACAvB,IAAA,EAAAqB,SAAA,CAAAC,IAAA;MACA;;MACAF,WAAA,CAAAM,MAAA;QAAA;QACA1B,IAAA,EAAAuB;MACA;MACAH,WAAA,CAAAO,MAAA;MACA;MACAJ,KAAA,CAAAK,OAAA,CAAAC,GAAA;QACAT,WAAA,CAAAO,MAAA,CAAAG,IAAA;UACA5B,IAAA,EAAA2B,GAAA;UACA7B,IAAA,EAAAqB,SAAA,CAAArB,IAAA,CAAA+B,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,GAAA;UACAI,IAAA;QACA;QACAnB,OAAA,CAAAC,GAAA,CAAAK,WAAA;MACA;MAEAA,WAAA,CAAAc,KAAA;MACAd,WAAA,CAAAe,OAAA;QAAA;QACAC,OAAA;QACAC,WAAA;UACAJ,IAAA;UACAK,KAAA;YACAC,eAAA;UACA;QACA;MACA;MACA;MACAvB,YAAA,CAAAwB,SAAA,CAAApB,WAAA;;MAEA;MACA,MAAAqB,WAAA,GAAA1C,OAAA,CAAAkB,IAAA,MAAAC,KAAA,CAAAwB,MAAA;MACA;QAAAC;MAAA,IAAA3C,IAAA,CAAAA,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAA4B,QAAA;MACA,IAAAC,UAAA;QACAlB,MAAA;UACAmB,SAAA;YACApC,KAAA;UACA;QACA;QACAqC,IAAA;UACAC,IAAA;QACA;QACAZ,OAAA;UACAC,OAAA;QACA;QACAb,KAAA;UACAU,IAAA;UAAA;UACAjC,IAAA,EAAA2C,QAAA,CAAAZ,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAV,IAAA;UACA0B,QAAA;YACAC,SAAA;cACAxC,KAAA;YACA;UACA;UACAyC,SAAA;YACAC,QAAA;YACA1C,KAAA;UACA;QACA;QACAyB,KAAA,GACA;UACAD,IAAA;UACAe,QAAA;YACAC,SAAA;cACAxC,KAAA;YACA;UACA;QACA,EACA;QACAA,KAAA;QAEAkB,MAAA,GAEA;UACAM,IAAA;UACA/B,IAAA;UACAF,IAAA,EAAA2C,QAAA,CAAAZ,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAoB,GAAA;QAGA,GACA;UACAlD,IAAA;UACAF,IAAA,EAAA2C,QAAA,CAAAZ,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAqB,MAAA;UACApB,IAAA;QACA;MAEA;MACAnB,OAAA,CAAAC,GAAA,CAAA4B,QAAA,CAAAZ,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAoB,GAAA;MACAX,WAAA,CAAAD,SAAA,CAAAI,UAAA;;MAEA;MACA,MAAAU,WAAA,GAAAvD,OAAA,CAAAkB,IAAA,MAAAC,KAAA,CAAAqC,MAAA;MACA;QAAAC;MAAA,IAAAxD,IAAA,CAAAA,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAyC,SAAA;MACA,IAAAC,UAAA;QACAtB,OAAA;UACAC,OAAA;QACA;QACA3B,KAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACAkB,MAAA,GACA;UACA3B,IAAA,EAAAwD,SAAA;UACAvB,IAAA;QACA;MAEA;MACAqB,WAAA,CAAAd,SAAA,CAAAi},"metadata":{},"sourceType":"module","externalDependencies":[]}
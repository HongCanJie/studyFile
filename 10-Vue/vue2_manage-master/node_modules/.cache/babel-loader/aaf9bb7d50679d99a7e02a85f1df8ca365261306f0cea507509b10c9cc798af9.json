{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 用来管理菜单相关的数据\nimport Cookie from 'js-cookie';\nexport default {\n  state: {\n    //状态\n    isCollapse: false,\n    //控制左侧菜单展开还是收起\n    tabsList: [{\n      path: '/',\n      name: 'home',\n      label: '首页',\n      icon: 's-home',\n      url: 'Home/Home'\n    }],\n    //面包屑数据，和路由展示的对应，与菜单的数据相关\n    menu: [] // 不同角色动态显示左边侧栏\n  },\n\n  mutations: {\n    // 修改state状态的方法\n    collapseMenu(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    // 删除指定的tag数据\n    closeTag(state, val) {\n      // console.log('itemmmmmm');\n      const index = state.tabsList.findIndex(item => item.name === val.name); // 找到当前项的index\n      state.tabsList.splice(index, 1); // splice（删除的位置，删除的个数）删除当前项\n    },\n\n    // 更新面包屑数据 点击左侧栏\n    selectMenu(state, val) {\n      console.log('val', val);\n      // 如果是首页，点击首页不会添加，如果是其他页面的话先判断在当前中是否存在，不存在的话添加，否则不添加\n      // 判断是否为首页\n\n      if (val.name !== 'home') {\n        // 如果tabsList存在此项会返回索引，否则返回-1\n        const index = state.tabsList.findIndex(item => item.name === val.name);\n        if (index === -1) {\n          state.tabsList.push(val); // 添加到tabsList\n        }\n\n        console.log(state.tabsList, 'tabsList');\n      }\n    },\n    // 设置不同用户角色显示不同的模块\n    // 设置menu数据\n    setMenu(state, val) {\n      state.menu = val;\n      // localStorage.setItem('menu',JSON.stringify(val)) // localStorage缓存数据\n      Cookie.set('menu', JSON.stringify(val)); // 用cookie缓存数据\n    },\n\n    // 动态注册路由  登录的时候调用\n    addMenu(state, router) {\n      // 判断缓存中是否有数据\n      if (!Cookie.get('menu')) return;\n      const menu = JSON.parse(Cookie.get('menu'));\n      state.menu = menu;\n      // 组装动态路由的数据\n      const menuArray = []; // permission\n      menu.forEach(item => {\n        // 判断是否有子路由\n        if (item.children) {\n          item.children = item.children.map(item => {\n            item.compoent = () => import(`../views/${item.url}`);\n            return item;\n          });\n          menuArray.push(...item.children);\n        } else {\n          item.compoent = () => import(`../views/${item.url}`);\n          menuArray.push(item);\n        }\n      });\n      console.log(menuArray, 'menuArray');\n      // 路由的动态添加\n      menuArray.forEach(item => {\n        router.addRoute('Main', item); // 添加在主路由之后\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookie","state","isCollapse","tabsList","path","name","label","icon","url","menu","mutations","collapseMenu","closeTag","val","index","findIndex","item","splice","selectMenu","console","log","push","setMenu","set","JSON","stringify","addMenu","router","get","parse","menuArray","forEach","children","map","compoent","addRoute"],"sources":["C:/Users/Administrator/Desktop/vue2_manage-master/src/store/tab.js"],"sourcesContent":["// 用来管理菜单相关的数据\nimport Cookie from 'js-cookie'\nexport default {\n\tstate: { //状态\n\t\tisCollapse: false, //控制左侧菜单展开还是收起\n\t\ttabsList:[\n\t\t\t{\n\t\t\t\tpath: '/',\n\t\t\t\tname: 'home',\n\t\t\t\tlabel: '首页',\n\t\t\t\ticon: 's-home',\n\t\t\t\turl: 'Home/Home'\n\t\t\t  },\n\t\t],//面包屑数据，和路由展示的对应，与菜单的数据相关\n\t\tmenu: [],// 不同角色动态显示左边侧栏\n\n\t},\n\tmutations: { // 修改state状态的方法\n\t\tcollapseMenu(state) {\n\t\t\tstate.isCollapse = !state.isCollapse\n\t\t},\n\t\t// 删除指定的tag数据\n\t\tcloseTag(state, val) {\n\t\t\t// console.log('itemmmmmm');\n\t\t\tconst index = state.tabsList.findIndex(item => item.name === val.name) // 找到当前项的index\n\t\t\tstate.tabsList.splice(index, 1); // splice（删除的位置，删除的个数）删除当前项\n\n\t\t},\n\t\t// 更新面包屑数据 点击左侧栏\n\t\tselectMenu(state, val) {\n\t\t\tconsole.log('val', val);\n\t\t\t// 如果是首页，点击首页不会添加，如果是其他页面的话先判断在当前中是否存在，不存在的话添加，否则不添加\n\t\t\t// 判断是否为首页\n\n\t\t\tif (val.name !== 'home') {\n\t\t\t\t// 如果tabsList存在此项会返回索引，否则返回-1\n\t\t\t\tconst index = state.tabsList.findIndex(item => item.name === val.name) \n\t\t\t\tif (index === -1) {\n\t\t\t\t\tstate.tabsList.push(val) // 添加到tabsList\n\t\t\t\t}\n\t\t\t\tconsole.log(state.tabsList,'tabsList');\n\t\t\t}\n\t\t},\n\n\t\t// 设置不同用户角色显示不同的模块\n\t\t// 设置menu数据\n\t\tsetMenu(state, val) {\n\t\t\tstate.menu = val\n\t\t\t// localStorage.setItem('menu',JSON.stringify(val)) // localStorage缓存数据\n\t\t\tCookie.set('menu', JSON.stringify(val)) // 用cookie缓存数据\n\t\t},\n\n\t\t// 动态注册路由  登录的时候调用\n\t\taddMenu(state, router) {\n\t\t// 判断缓存中是否有数据\n\t\t\tif(!Cookie.get('menu')) return \n\t\t\tconst menu= JSON.parse(Cookie.get('menu'))\n\t\t\tstate.menu = menu\n\t\t\t// 组装动态路由的数据\n\t\t\tconst menuArray = [] // permission\n\t\t\tmenu.forEach(item => {\n\t\t\t\t// 判断是否有子路由\n\t\t\t\tif(item.children) {\n\t\t\t\t\titem.children = item.children.map(item => {\n\t\t\t\t\t\titem.compoent = () => import(`../views/${item.url}`)\n\t\t\t\t\t\treturn item\n\t\t\t\t\t})\n\t\t\t\t\tmenuArray.push(...item.children)\n\t\t\t\t}else {\n\t\t\t\t\titem.compoent = () => import(`../views/${item.url}`)\n\t\t\t\t\tmenuArray.push(item)\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(menuArray,'menuArray');\n// 路由的动态添加\n\t\t\tmenuArray.forEach(item => {\n\t\t\t\trouter.addRoute('Main',item) // 添加在主路由之后\n\t\t\t})\n\n\t\t},\n\t}\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
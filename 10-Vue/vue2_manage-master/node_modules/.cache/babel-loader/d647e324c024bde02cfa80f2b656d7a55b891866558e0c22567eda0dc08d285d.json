{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\n\n// 1.创建路由组件 新在src下新建views文件夹，再此文件夹下新建组件，\n// 每个页面作为路由，即新建Home.vue和User.vue, 可以从其他文件 import 进来\nimport Home from '../views/Home.vue';\nimport User from '../views/User.vue';\nimport Main from '../views/Main.vue';\nimport Mall from '../views/Mall.vue';\nimport PageOne from '../views/PageOne.vue';\nimport PageTwo from '../views/PageTwo.vue';\nimport Login from '../views/Login.vue';\n// 2.将路由与组件进行映射\nconst routes = [{\n  // 主路由\n  path: '/',\n  component: Main,\n  // 当跳转到首页路径为/时，再重定向跳转到/home\n  redirect: '/home',\n  name: 'Main',\n  children: [\n    // 子路由  注意这里的path要和CommonAside.vue的path对应\n    // { path: 'home', name: 'home', component: Home },//添加相关页面的路由 首页\n    // { path: 'user', name: 'user',component: User }, //用户管理\n    // { path: 'mall',name: 'mall', component: Mall }, // 商品管理\n    // { path: 'page1', name: 'page1',component: PageOne }, // 页面一\n    // { path: 'page2', name: 'page2',component: PageTwo }, // 页面二\n  ]\n},\n// 登录页面和首页是并列的\n{\n  path: '/login',\n  component: Login,\n  name: 'Login'\n}];\n\n// 3. 创建 router 实例，然后传 `routes` 配置\n// 你还可以传别的配置参数, 不过先这么简单着吧。\nconst router = new VueRouter({\n  routes // (缩写) 相当于 routes: routes\n});\n\nexport default router; // 将当前实例进行对外暴露导出   输出单个值，使用export default\n\n// 4.创建和挂载到根实例main.js中，通过router配置参数注入路由，\n// 从而让整个应用都有路由功能，在App.vue中添加路由出口","map":{"version":3,"names":["Vue","VueRouter","use","Home","User","Main","Mall","PageOne","PageTwo","Login","routes","path","component","redirect","name","children","router"],"sources":["C:/Users/Administrator/Desktop/资料文档/前端开发/10-Vue/vue2_manage-master/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\n\n// 1.创建路由组件 新在src下新建views文件夹，再此文件夹下新建组件，\n// 每个页面作为路由，即新建Home.vue和User.vue, 可以从其他文件 import 进来\nimport Home from '../views/Home.vue'\nimport User from '../views/User.vue'\nimport Main from '../views/Main.vue'\nimport Mall from '../views/Mall.vue'\nimport PageOne from '../views/PageOne.vue'\nimport PageTwo from '../views/PageTwo.vue'\n\nimport Login from '../views/Login.vue'\n// 2.将路由与组件进行映射\nconst routes = [\n\t\n\t{\n\t\t// 主路由\n\t\tpath: '/', \n\t\tcomponent: Main,\t\n\t\t// 当跳转到首页路径为/时，再重定向跳转到/home\n\t\tredirect: '/home',\n\t\tname:'Main',\n\t\tchildren:[\n\t\t\t// 子路由  注意这里的path要和CommonAside.vue的path对应\n\t\t\t// { path: 'home', name: 'home', component: Home },//添加相关页面的路由 首页\n\t\t\t// { path: 'user', name: 'user',component: User }, //用户管理\n\t\t\t// { path: 'mall',name: 'mall', component: Mall }, // 商品管理\n\t\t\t// { path: 'page1', name: 'page1',component: PageOne }, // 页面一\n\t\t\t// { path: 'page2', name: 'page2',component: PageTwo }, // 页面二\n\t\t]\n\t},\n\t// 登录页面和首页是并列的\n\t{\n\t\tpath:'/login',\n\t\tcomponent:Login,\n\t\tname:'Login',\n\t}\n\t\n  ]\n\n\n// 3. 创建 router 实例，然后传 `routes` 配置\n// 你还可以传别的配置参数, 不过先这么简单着吧。\nconst router = new VueRouter({\n\troutes // (缩写) 相当于 routes: routes\n  })\n\nexport default router  // 将当前实例进行对外暴露导出   输出单个值，使用export default\n\n// 4.创建和挂载到根实例main.js中，通过router配置参数注入路由，\n// 从而让整个应用都有路由功能，在App.vue中添加路由出口"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;;AAElB;AACA;AACA,OAAOE,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA,MAAMC,MAAM,GAAG,CAEd;EACC;EACAC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEP,IAAI;EACf;EACAQ,QAAQ,EAAE,OAAO;EACjBC,IAAI,EAAC,MAAM;EACXC,QAAQ,EAAC;IACR;IACA;IACA;IACA;IACA;IACA;EAAA;AAEF,CAAC;AACD;AACA;EACCJ,IAAI,EAAC,QAAQ;EACbC,SAAS,EAACH,KAAK;EACfK,IAAI,EAAC;AACN,CAAC,CAEC;;AAGH;AACA;AACA,MAAME,MAAM,GAAG,IAAIf,SAAS,CAAC;EAC5BS,MAAM,CAAC;AACN,CAAC,CAAC;;AAEJ,eAAeM,MAAM,EAAE;;AAEvB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}